# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: heektime-schema/services/lectures.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from heektime_schema import lecture_pb2 as heektime__schema_dot_lecture__pb2
from heektime_schema import period_pb2 as heektime__schema_dot_period__pb2
from heektime_schema import semester_pb2 as heektime__schema_dot_semester__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='heektime-schema/services/lectures.proto',
  package='heek.heektime',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\'heektime-schema/services/lectures.proto\x12\rheek.heektime\x1a\x1dheektime-schema/lecture.proto\x1a\x1cheektime-schema/period.proto\x1a\x1eheektime-schema/semester.proto\"\xe9\x01\n\x12GetLecturesPayload\x12\x0c\n\x04year\x18\x01 \x01(\x05\x12)\n\x08semester\x18\x02 \x01(\x0e\x32\x17.heek.heektime.Semester\x12\x11\n\tschool_id\x18\x03 \x01(\t\x12&\n\x07periods\x18\x07 \x03(\x0b\x32\x15.heek.heektime.Period\x12\x39\n\x07options\x18\n \x03(\x0b\x32(.heek.heektime.GetLecturesPayload.Option\x1a$\n\x06Option\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t2X\n\x08Lectures\x12L\n\x0bGetLectures\x12!.heek.heektime.GetLecturesPayload\x1a\x16.heek.heektime.Lecture\"\x00\x30\x01\x62\x06proto3'
  ,
  dependencies=[heektime__schema_dot_lecture__pb2.DESCRIPTOR,heektime__schema_dot_period__pb2.DESCRIPTOR,heektime__schema_dot_semester__pb2.DESCRIPTOR,])




_GETLECTURESPAYLOAD_OPTION = _descriptor.Descriptor(
  name='Option',
  full_name='heek.heektime.GetLecturesPayload.Option',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='heek.heektime.GetLecturesPayload.Option.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='heek.heektime.GetLecturesPayload.Option.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=349,
  serialized_end=385,
)

_GETLECTURESPAYLOAD = _descriptor.Descriptor(
  name='GetLecturesPayload',
  full_name='heek.heektime.GetLecturesPayload',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='year', full_name='heek.heektime.GetLecturesPayload.year', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='semester', full_name='heek.heektime.GetLecturesPayload.semester', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='school_id', full_name='heek.heektime.GetLecturesPayload.school_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='periods', full_name='heek.heektime.GetLecturesPayload.periods', index=3,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='options', full_name='heek.heektime.GetLecturesPayload.options', index=4,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_GETLECTURESPAYLOAD_OPTION, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=152,
  serialized_end=385,
)

_GETLECTURESPAYLOAD_OPTION.containing_type = _GETLECTURESPAYLOAD
_GETLECTURESPAYLOAD.fields_by_name['semester'].enum_type = heektime__schema_dot_semester__pb2._SEMESTER
_GETLECTURESPAYLOAD.fields_by_name['periods'].message_type = heektime__schema_dot_period__pb2._PERIOD
_GETLECTURESPAYLOAD.fields_by_name['options'].message_type = _GETLECTURESPAYLOAD_OPTION
DESCRIPTOR.message_types_by_name['GetLecturesPayload'] = _GETLECTURESPAYLOAD
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

GetLecturesPayload = _reflection.GeneratedProtocolMessageType('GetLecturesPayload', (_message.Message,), {

  'Option' : _reflection.GeneratedProtocolMessageType('Option', (_message.Message,), {
    'DESCRIPTOR' : _GETLECTURESPAYLOAD_OPTION,
    '__module__' : 'heektime_schema.services.lectures_pb2'
    # @@protoc_insertion_point(class_scope:heek.heektime.GetLecturesPayload.Option)
    })
  ,
  'DESCRIPTOR' : _GETLECTURESPAYLOAD,
  '__module__' : 'heektime_schema.services.lectures_pb2'
  # @@protoc_insertion_point(class_scope:heek.heektime.GetLecturesPayload)
  })
_sym_db.RegisterMessage(GetLecturesPayload)
_sym_db.RegisterMessage(GetLecturesPayload.Option)



_LECTURES = _descriptor.ServiceDescriptor(
  name='Lectures',
  full_name='heek.heektime.Lectures',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=387,
  serialized_end=475,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetLectures',
    full_name='heek.heektime.Lectures.GetLectures',
    index=0,
    containing_service=None,
    input_type=_GETLECTURESPAYLOAD,
    output_type=heektime__schema_dot_lecture__pb2._LECTURE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_LECTURES)

DESCRIPTOR.services_by_name['Lectures'] = _LECTURES

# @@protoc_insertion_point(module_scope)
